{
  "object": {
    "code": "// Define a class called Person\nclass Person {\n  // Constructor\n  constructor(firstName, lastName, age) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.age = age;\n  }\n  \n  // Getter method for full name\n  getFullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  \n  // Method to check if person is adult\n  isAdult() {\n    return this.age >= 18;\n  }\n  \n  // Method to update age\n  updateAge(newAge) {\n    if (newAge > 0) {\n      this.age = newAge;\n      return true;\n    }\n    return false;\n  }\n  \n  // Static method to create a Person from an object\n  static fromObject(obj) {\n    return new Person(obj.firstName, obj.lastName, obj.age);\n  }\n}\n\n// Example usage\nfunction testPerson() {\n  // Create a new person\n  const person1 = new Person(\"John\", \"Doe\", 25);\n  \n  // Use instance methods\n  Logger.log(person1.getFullName()); // Outputs: John Doe\n  Logger.log(person1.isAdult()); // Outputs: true\n  \n  // Update age\n  person1.updateAge(26);\n  Logger.log(person1.age); // Outputs: 26\n  \n  // Create person from object using static method\n  const personData = {\n    firstName: \"Jane\",\n    lastName: \"Smith\",\n    age: 30\n  };\n  const person2 = Person.fromObject(personData);\n  Logger.log(person2.getFullName()); // Outputs: Jane Smith\n}"
  },
  "finishReason": "tool-calls",
  "usage": {
    "promptTokens": 472,
    "completionTokens": 449,
    "totalTokens": 921
  },
  "warnings": [],
  "providerMetadata": {
    "anthropic": {
      "cacheCreationInputTokens": 0,
      "cacheReadInputTokens": 0
    }
  },
  "experimental_providerMetadata": {
    "anthropic": {
      "cacheCreationInputTokens": 0,
      "cacheReadInputTokens": 0
    }
  },
  "response": {
    "id": "msg_01T6oiJLw3yNTYHuX9ojwzNp",
    "timestamp": "2025-03-11T22:05:22.417Z",
    "modelId": "claude-3-5-sonnet-20241022",
    "headers": {
      "anthropic-organization-id": "215d381a-c388-42c7-8115-840170a6d5c4",
      "anthropic-ratelimit-input-tokens-limit": "40000",
      "anthropic-ratelimit-input-tokens-remaining": "40000",
      "anthropic-ratelimit-input-tokens-reset": "2025-03-11T22:05:17Z",
      "anthropic-ratelimit-output-tokens-limit": "8000",
      "anthropic-ratelimit-output-tokens-remaining": "8000",
      "anthropic-ratelimit-output-tokens-reset": "2025-03-11T22:05:22Z",
      "anthropic-ratelimit-requests-limit": "50",
      "anthropic-ratelimit-requests-remaining": "49",
      "anthropic-ratelimit-requests-reset": "2025-03-11T22:05:17Z",
      "anthropic-ratelimit-tokens-limit": "48000",
      "anthropic-ratelimit-tokens-remaining": "48000",
      "anthropic-ratelimit-tokens-reset": "2025-03-11T22:05:17Z",
      "cf-cache-status": "DYNAMIC",
      "cf-ray": "91ee5a2ecd2ce65f-DEN",
      "connection": "keep-alive",
      "content-encoding": "gzip",
      "content-type": "application/json",
      "date": "Tue, 11 Mar 2025 22:05:22 GMT",
      "request-id": "req_014MTVaDpdMY2ZRLYENW3Ct4",
      "server": "cloudflare",
      "transfer-encoding": "chunked",
      "via": "1.1 google",
      "x-robots-tag": "none"
    },
    "body": {
      "id": "msg_01T6oiJLw3yNTYHuX9ojwzNp",
      "type": "message",
      "role": "assistant",
      "model": "claude-3-5-sonnet-20241022",
      "content": [
        {
          "type": "tool_use",
          "id": "toolu_0199oo9FCHmEGxDKfrDw4HzC",
          "name": "json",
          "input": {
            "code": "// Define a class called Person\nclass Person {\n  // Constructor\n  constructor(firstName, lastName, age) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.age = age;\n  }\n  \n  // Getter method for full name\n  getFullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  \n  // Method to check if person is adult\n  isAdult() {\n    return this.age >= 18;\n  }\n  \n  // Method to update age\n  updateAge(newAge) {\n    if (newAge > 0) {\n      this.age = newAge;\n      return true;\n    }\n    return false;\n  }\n  \n  // Static method to create a Person from an object\n  static fromObject(obj) {\n    return new Person(obj.firstName, obj.lastName, obj.age);\n  }\n}\n\n// Example usage\nfunction testPerson() {\n  // Create a new person\n  const person1 = new Person(\"John\", \"Doe\", 25);\n  \n  // Use instance methods\n  Logger.log(person1.getFullName()); // Outputs: John Doe\n  Logger.log(person1.isAdult()); // Outputs: true\n  \n  // Update age\n  person1.updateAge(26);\n  Logger.log(person1.age); // Outputs: 26\n  \n  // Create person from object using static method\n  const personData = {\n    firstName: \"Jane\",\n    lastName: \"Smith\",\n    age: 30\n  };\n  const person2 = Person.fromObject(personData);\n  Logger.log(person2.getFullName()); // Outputs: Jane Smith\n}"
          }
        }
      ],
      "stop_reason": "tool_use",
      "stop_sequence": null,
      "usage": {
        "input_tokens": 472,
        "cache_creation_input_tokens": 0,
        "cache_read_input_tokens": 0,
        "output_tokens": 449
      }
    }
  },
  "request": {
    "body": "{\"model\":\"claude-3-5-sonnet-20241022\",\"max_tokens\":5000,\"temperature\":0,\"system\":[{\"type\":\"text\",\"text\":\"You are an expert in Google Apps Script writing code. Your output should only be valid code that can be run in Google Apps Script. DO NOT WRITE MARKOWN. RETURN VALID APPS SCRIPT CODE ONLY.\"}],\"messages\":[{\"role\":\"user\",\"content\":[{\"type\":\"text\",\"text\":\"Write Apps Script code to create a class with properties and methods\"}]}],\"tools\":[{\"name\":\"json\",\"description\":\"Respond with a JSON object.\",\"input_schema\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\",\"description\":\"Valid Apps Script code\"}},\"required\":[\"code\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}],\"tool_choice\":{\"type\":\"tool\",\"name\":\"json\"}}"
  },
  "duration": 6537
}