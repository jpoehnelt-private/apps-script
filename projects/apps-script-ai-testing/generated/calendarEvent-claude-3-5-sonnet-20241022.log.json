{
  "object": {
    "code": "function createCalendarEventWithGuests() {\n  // Get the default calendar\n  var calendar = CalendarApp.getDefaultCalendar();\n  \n  // Event details\n  var title = \"Team Meeting\";\n  var startTime = new Date();\n  var endTime = new Date(startTime.getTime() + (60 * 60 * 1000)); // 1 hour later\n  var guests = [\"guest1@example.com\", \"guest2@example.com\"]; // Replace with actual email addresses\n  \n  // Create the event\n  var event = calendar.createEvent(title,\n    startTime,\n    endTime,\n    {\n      description: \"Regular team sync-up meeting\",\n      location: \"Conference Room A\",\n      guests: guests.join(\",\"),\n      sendInvites: true // This will automatically send invites to guests\n    }\n  );\n  \n  // Optional: Add additional guests after event creation\n  // guests.forEach(function(guest) {\n  //   event.addGuest(guest);\n  // });\n  \n  Logger.log('Event created: ' + event.getTitle());\n  Logger.log('Guests: ' + event.getGuestList().map(function(guest) {\n    return guest.getEmail();\n  }).join(\", \"));\n}"
  },
  "finishReason": "tool-calls",
  "usage": {
    "promptTokens": 478,
    "completionTokens": 341,
    "totalTokens": 819
  },
  "warnings": [],
  "providerMetadata": {
    "anthropic": {
      "cacheCreationInputTokens": 0,
      "cacheReadInputTokens": 0
    }
  },
  "experimental_providerMetadata": {
    "anthropic": {
      "cacheCreationInputTokens": 0,
      "cacheReadInputTokens": 0
    }
  },
  "response": {
    "id": "msg_01LC7U9ZLDEq1BRU5wDsA8mp",
    "timestamp": "2025-03-12T00:09:13.097Z",
    "modelId": "claude-3-5-sonnet-20241022",
    "headers": {
      "anthropic-organization-id": "215d381a-c388-42c7-8115-840170a6d5c4",
      "anthropic-ratelimit-input-tokens-limit": "40000",
      "anthropic-ratelimit-input-tokens-remaining": "40000",
      "anthropic-ratelimit-input-tokens-reset": "2025-03-12T00:08:03Z",
      "anthropic-ratelimit-output-tokens-limit": "8000",
      "anthropic-ratelimit-output-tokens-remaining": "8000",
      "anthropic-ratelimit-output-tokens-reset": "2025-03-12T00:08:08Z",
      "anthropic-ratelimit-requests-limit": "50",
      "anthropic-ratelimit-requests-remaining": "49",
      "anthropic-ratelimit-requests-reset": "2025-03-12T00:08:02Z",
      "anthropic-ratelimit-tokens-limit": "48000",
      "anthropic-ratelimit-tokens-remaining": "48000",
      "anthropic-ratelimit-tokens-reset": "2025-03-12T00:08:03Z",
      "cf-cache-status": "DYNAMIC",
      "cf-ray": "91ef0e01d95d2f75-LAX",
      "connection": "keep-alive",
      "content-encoding": "gzip",
      "content-type": "application/json",
      "date": "Wed, 12 Mar 2025 00:08:08 GMT",
      "request-id": "req_01Q2nyBPXN8TqnQ3FXkSrZHp",
      "server": "cloudflare",
      "transfer-encoding": "chunked",
      "via": "1.1 google",
      "x-robots-tag": "none"
    },
    "body": {
      "id": "msg_01LC7U9ZLDEq1BRU5wDsA8mp",
      "type": "message",
      "role": "assistant",
      "model": "claude-3-5-sonnet-20241022",
      "content": [
        {
          "type": "tool_use",
          "id": "toolu_01PxZY2sXxb5n3UUMTrpPhaN",
          "name": "json",
          "input": {
            "code": "function createCalendarEventWithGuests() {\n  // Get the default calendar\n  var calendar = CalendarApp.getDefaultCalendar();\n  \n  // Event details\n  var title = \"Team Meeting\";\n  var startTime = new Date();\n  var endTime = new Date(startTime.getTime() + (60 * 60 * 1000)); // 1 hour later\n  var guests = [\"guest1@example.com\", \"guest2@example.com\"]; // Replace with actual email addresses\n  \n  // Create the event\n  var event = calendar.createEvent(title,\n    startTime,\n    endTime,\n    {\n      description: \"Regular team sync-up meeting\",\n      location: \"Conference Room A\",\n      guests: guests.join(\",\"),\n      sendInvites: true // This will automatically send invites to guests\n    }\n  );\n  \n  // Optional: Add additional guests after event creation\n  // guests.forEach(function(guest) {\n  //   event.addGuest(guest);\n  // });\n  \n  Logger.log('Event created: ' + event.getTitle());\n  Logger.log('Guests: ' + event.getGuestList().map(function(guest) {\n    return guest.getEmail();\n  }).join(\", \"));\n}"
          }
        }
      ],
      "stop_reason": "tool_use",
      "stop_sequence": null,
      "usage": {
        "input_tokens": 478,
        "cache_creation_input_tokens": 0,
        "cache_read_input_tokens": 0,
        "output_tokens": 341
      }
    }
  },
  "request": {
    "body": "{\"model\":\"claude-3-5-sonnet-20241022\",\"max_tokens\":5000,\"temperature\":0,\"system\":[{\"type\":\"text\",\"text\":\"You are an expert in Google Apps Script writing code. Your output should only be valid code that can be run in Google Apps Script. DO NOT WRITE MARKOWN. RETURN VALID APPS SCRIPT CODE ONLY.\"}],\"messages\":[{\"role\":\"user\",\"content\":[{\"type\":\"text\",\"text\":\"Write Apps Script code create a new event in Google Calendar and send invites to all guests\"}]}],\"tools\":[{\"name\":\"json\",\"description\":\"Respond with a JSON object.\",\"input_schema\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\",\"description\":\"Valid Apps Script code\"}},\"required\":[\"code\"],\"additionalProperties\":false,\"$schema\":\"http://json-schema.org/draft-07/schema#\"}}],\"tool_choice\":{\"type\":\"tool\",\"name\":\"json\"}}"
  },
  "duration": 71683
}